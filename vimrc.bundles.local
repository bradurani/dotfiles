Plug 'itchyny/lightline.vim'
Plug 'morhetz/gruvbox'

Plug 'sjl/gundo.vim'

"Vim + Tmux
Plug 'jgdavey/tslime.vim'

Plug 'tmhedberg/matchit'
Plug 'kana/vim-textobj-user'

Plug 'nelstrom/vim-textobj-rubyblock'
Plug 'airblade/vim-gitgutter'
Plug 'tomtom/tcomment_vim'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'kshenoy/vim-signature'
Plug 'bradurani/vim-powerclose', { 'branch': 'master' }
Plug 'chaoren/vim-wordmotion'
Plug 'ntpeters/vim-better-whitespace'
Plug 'ludovicchabant/vim-gutentags'
Plug 'AndrewRadev/switch.vim'
" Plug 'jiangmiao/auto-pairs'
Plug 'mcasper/vim-infer-debugger'
" Plug 'Valloric/YouCompleteMe'

" if has('nvim')
"   Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
" else
"   Plug 'Shougo/deoplete.nvim'
"   Plug 'roxma/nvim-yarp'
"   Plug 'roxma/vim-hug-neovim-rpc'
" endif
" let g:deoplete#enable_at_startup = 1
" Use release branch (recommend)
Plug 'neoclide/coc.nvim', {'branch': 'release'}

Plug 'sbdchd/neoformat'

Plug 'tmux-plugins/vim-tmux-focus-events'

"JavaScript
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'leshill/vim-json'
Plug 'othree/javascript-libraries-syntax.vim'
" Plug 'mustache/vim-mustache-handlebars'

"css
Plug 'cakebaker/scss-syntax.vim'
Plug 'hail2u/vim-css3-syntax'

Plug 'honza/dockerfile.vim'
" Plug 'ElmCast/elm-vim'
Plug 'exu/pgsql.vim'

"elixir
" Plug 'elixir-lang/vim-elixir'
" Plug 'slashmili/alchemist.vim'

"Ruby
Plug 'ngmy/vim-rubocop'
Plug 'ecomba/vim-ruby-refactoring'

"Rust
" Plug 'rust-lang/rust.vim'
" Plug 'autozimu/LanguageClient-neovim', {
"     \ 'branch': 'next',
"     \ 'do': 'bash install.sh',
"     \ }

"Scala
" Plug 'derekwyatt/vim-scala'
" Plug 'ensime/ensime-vim'

"Terraform
Plug 'hashivim/vim-terraform'

"Puppet
Plug 'rodjek/vim-puppet'

"neovim
" Plug 'kassio/neoterm'
